{"version":3,"sources":["../src/Components/Cart.js","../src/containers/CartContainer.js"],"names":["Cart","cartQuan","onIncrease","onDecrease","onDeleteData","discountAlert","setDiscountAlert","map","a","i","name","price","quan","CartContainer","state","dispatch","data"],"mappings":";;;;;;;AAAA,ACAA;;ADCA,ACAA;;AACA;;AACA;;;;AAGA,SAASa,aAAT,GAAwB;AACtB;AACA;AACA,MAAMZ,QAAQ,GAAI,6BAAa,UAAAa,KAAK;AAAA,WAAKA,KAAK,CAACb,QAAX;AAAA,GAAlB,CAAlB,CAHsB,CAMpB;;AACF,MAAMc,QAAQ,GAAG,8BAAjB,CAPsB,CASpB;;AACF,MAAMX,YAAY,GAAG,SAAfA,YAAe,CAACY,IAAD;ADbvB,ACauB,SDbdhB,ECawBe,EDbjC,MCayC,CDbyB,ACaxB,0BAAWC,IAAX,CAAD,CAAlB;ADb2C,ACa3C,GAArB,GDbaf,QAAmD,QAAnDA,QAAmD;AAAA,MAAxCC,UAAwC,QAAxCA,UAAwC;AAAA,ACchE,MDdoCC,ACc9BD,UDd0D,ACchD,GAAG,KDdiBC,ICc9BD,MDd0D,ICc7C,CAACO,CAAD;ADd6C,ACc7C,MDd6BL,KCctBW,ODdsC,CCc9B,CAAC,MDdaX,YAAgB,MCcpBK,CAAT,CAAD,CAAf;AAAA,GAAnB;ADZA,kBAA6C,qBAAS,KAAT,CAA7C;AAAA,ACaA,MAAMN,UAAU,GAAG,SAAbA,UAAa,CAACM,CAAD;ADbnB,ACamB,MDbXJ,KCakBU,QDb1B,ACakC,CAAC,wBAASN,CAAT,CAAD,CAAf;ADbnB,ACamB,GAAnB,GDbwBH,gBAAxB;;AAEA,ACaA,sBACE,EDdQ,YAAI,eCcX,aAAD;ADbAA,ACcA,IDdAA,ACcA,QAAQ,EAAEL,MDdM,CAAC,CCajB,GDbgB,CAAhB;AACD,ACcC,GDhBF,CCgBE,CDdA,EAFF,OCgBY,EAAEC,UAFZ;ADVF,ACaE,IAAA,UAAU,EAAEC,MDZZ,ICSA,mDDRE,6BAAC,yBAAD,qBACA,6BAAC,qBAAD;AAAO,ACWT,IDXS,ACWT,UDXmB,EAAC,ACWR,EAAEC;ADXZ,ACOF,IADF,cDLM,yDACE,sDACE,8DADF,eAEE,wDAFF,eAGE,wDAHF,eAIE,oEAJF,eAKE,8DALF,eAME,wCANF,CADF,CADF,eAWE,4CACGH,QAAQ,CAACM,GAAT,CAAa,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACtB,ACCX,wBDAa;AAAI,MAAA,GAAG,EAAEA;AAAT,eCCCI,KDAC,yCAAKL,CAAC,CAACE,IAAP,CADF,eAEE,yCAAKF,CAAC,CAACG,KAAP,CAFF,eAGE,yCAAKH,CAAC,CAACI,IAAP,CAHF,eAIE,sDACE;AAAQ,MAAA,OAAO,EAAG,mBAAK;AAAEV,QAAAA,UAAU,CAACO,CAAD,CAAV;AAAe;AAAxC,aADF,eAEE;AAAQ,MAAA,OAAO,EAAG,mBAAK;AAAEN,QAAAA,UAAU,CAACM,CAAD,CAAV;AAAe;AAAxC,aAFF,CAJF,eAQE,yCAAKD,CAAC,CAACG,KAAF,GAAUH,CAAC,CAACI,IAAjB,CARF,eASE,sDACE;AAAQ,MAAA,OAAO,EAAG,mBAAK;AAAER,QAAAA,YAAY,CAACK,CAAD,CAAZ;AAAiB;AAA1C,wBADF,CATF,CADF;AAeD,GAhBA,CADH,CAXF,CADA,CADF,eAkCE,8FAlCF,EAuCIJ,aAAa,KAAK,IAAlB,iBACC;AAAK,IAAA,SAAS,EAAC;AAAf,kBACD,iIADC,eAED;AAAQ,IAAA,OAAO,EAAE,mBAAM;AAAEC,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAAyB;AAAlD,sBAFC,CAxCL,CADF;AAiDD;;eAEcN","file":"CartContainer.8955bbe1.js","sourceRoot":"..\\public","sourcesContent":["import React, {useState , useEffect} from \"react\";\r\nimport { Table,Container } from \"react-bootstrap\";\r\n\r\nfunction Cart({cartQuan , onIncrease, onDecrease, onDeleteData }) {\r\n  \r\n  const [ discountAlert , setDiscountAlert ] = useState(false)\r\n\r\n  useEffect(()=>{\r\n    setDiscountAlert(true)\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n      <Table responsive=\"md\">\r\n        <thead>\r\n          <tr>            \r\n            <th>상품명</th>\r\n            <th>가격</th>\r\n            <th>수량</th>\r\n            <th>수량변경</th>\r\n            <th>총금액</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cartQuan.map((a, i) => {\r\n            return (\r\n              <tr key={i}>               \r\n                <td>{a.name}</td>\r\n                <td>{a.price}</td>\r\n                <td>{a.quan}</td>\r\n                <td>\r\n                  <button onClick={ ()=> { onIncrease(i) } } > + </button>\r\n                  <button onClick={ ()=> { onDecrease(i) } } > - </button>\r\n                </td>\r\n                <td>{a.price * a.quan}</td>\r\n                <td>\r\n                  <button onClick={ ()=> { onDeleteData(i) } }> 삭제 </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      </Container>\r\n      <div>\r\n        이곳은 최근본상품\r\n      </div>\r\n  \r\n      {\r\n        discountAlert === true &&\r\n        (<div className=\"my-alert2\">\r\n        <p>지금 바로사면 20%할인해드림 개꿀 !</p>\r\n        <button onClick={() => { setDiscountAlert(false) }} > 닫기 </button>\r\n        </div>)\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Cart from '../Components/Cart'\r\nimport { increase , decrease , deleteData} from '../modules/cartQuan';\r\n\r\n\r\nfunction CartContainer(){\r\n  // useSelector는 리덕스 스토어의 상태를 조회하는 Hook입니다.\r\n  // state의 값은 store.getState() 함수를 호출했을 때 나타나는 결과물과 동일합니다.\r\n  const cartQuan  = useSelector( state =>  state.cartQuan ) \r\n\r\n\r\n    // useDispatch 는 리덕스 스토어의 dispatch 를 함수에서 사용 할 수 있게 해주는 Hook 입니다.\r\n  const dispatch = useDispatch();\r\n\r\n    // 액션 디스패치 함수  \r\n  const onDeleteData = (data) => dispatch(deleteData(data));\r\n  const onIncrease = (i) => dispatch(increase(i));\r\n  const onDecrease = (i) => dispatch(decrease(i));\r\n    \r\n  return (\r\n    <Cart \r\n    cartQuan={cartQuan}\r\n    onIncrease={onIncrease}\r\n    onDecrease={onDecrease}\r\n    onDeleteData={onDeleteData}\r\n    /> \r\n  )\r\n}\r\nexport default CartContainer;\r\n"]}